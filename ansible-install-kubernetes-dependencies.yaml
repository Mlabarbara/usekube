## https://kubernetes.io/blog/2019/03/15/kubernetes-setup-using-ansible-and-vagrant/
# https://github.com/virtualelephant/vsphere-kubernetes/blob/master/ansible/cilium-install.yml#L57
# ansible .yml files define what tasks/operations to run

---
- hosts: all #to run the "all" hosts category from the ansible-hosts.txt  
  #become means to be superuser
  become: true
  remote_user: ubuntu
  tasks:
  - name: Install packages that allow apt to be used over HTTPs
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Add an apt signing key for docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository: 
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present 

  - name: Install docker and its dependencies
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars: 
      packages: 
        - docker-ce
        - docker-ce-cli
        - containerd.io

  - name: verify docker install, enabled, and started
    service: 
      name: docker
      state: started
      enabled: yes

  - name: remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb >= 0

  - name: add an apt signing key for kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: adding apt repository for kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: install kubernetes binaries
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        # it is usually recommended to specifcy which version you want to install
        - kubelet=1.23.6-00
        - kubeadm=1.23.6-00
        - kubectl=1.23.6-00

  - name: hold kubernetes binary versions (prevent from being updated)
    dpkg_selections:
      name: "{{ item }}"
      selection: hold
    loop:
      - kubelet
      - kubeadm
      - kubectl

  - name: Restart kubelet
    service: 
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: add ubuntu user to docker
    user:
      name: ubuntu
      group: docker
  
  - name: reboot to apply swap disable
    reboot:
      reboot_timeout: 180 # allow 3 minutes for the reboot to take place 
      
    